import nodemailer from 'nodemailer';

export class EmailService {
  private static transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: 'lunarofmoon@gmail.com',
      pass: 'idektxbqqwdavxou',
    },
  });
  

  /**
   * G·ª≠i OTP x√°c nh·∫≠n ƒë·∫∑t ph√≤ng
   */
  static async sendOTPEmail(email: string, name: string, otpCode: string, bookingId: string) {
    try {
      const mailOptions = {
        from: `"KatHome In Town" <lunarofmoon@gmail.com>`,
        to: email,
        subject: `X√°c nh·∫≠n ƒë·∫∑t ph√≤ng - M√£ OTP ${otpCode}`,
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #FAD0C4 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: #3D0301; }
              .content { background: #fef5f6; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .otp-box { font-size: 36px; font-weight: bold; color: #3D0301; 
                      text-align: center; letter-spacing: 8px; padding: 25px; 
                      background: white; border-radius: 10px; margin: 20px 0; 
                      border: 2px dashed #F2A7C3; }
              .booking-id { background: #FAD0C4; padding: 15px; border-radius: 5px; 
                           text-align: center; margin: 15px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .warning { color: #e74c3c; font-size: 14px; margin-top: 15px; }
              .info { background: #fff; padding: 15px; border-left: 4px solid #F2A7C3; margin: 15px 0; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üè† KatHome In Town</h1>
                <p>X√°c nh·∫≠n ƒë·∫∑t ph√≤ng c·ªßa b·∫°n</p>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t ph√≤ng t·∫°i KatHome In Town!</p>
                
                <div class="booking-id">
                  <strong>M√£ ƒë·∫∑t ph√≤ng:</strong> ${bookingId}
                </div>
                
                <p>ƒê·ªÉ ho√†n t·∫•t ƒë·∫∑t ph√≤ng, vui l√≤ng nh·∫≠p m√£ OTP d∆∞·ªõi ƒë√¢y:</p>
                
                <div class="otp-box">${otpCode}</div>
                
                <div class="info">
                  <strong>‚è∞ L∆∞u √Ω quan tr·ªçng:</strong>
                  <ul>
                    <li>M√£ OTP c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong></li>
                    <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                    <li>Sau khi x√°c nh·∫≠n, b·∫°n c√≥ th·ªÉ thanh to√°n t·∫°i qu·∫ßy</li>
                  </ul>
                </div>
                
                <p class="warning">‚ö†Ô∏è N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán ƒë·∫∑t ph√≤ng n√†y, vui l√≤ng b·ªè qua email.</p>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      const info = await this.transporter.sendMail(mailOptions);
      console.log(`‚úÖ OTP email sent to ${email}:`, info.messageId);
      return { success: true, messageId: info.messageId };
    } catch (error) {
      console.error('‚ùå Error sending OTP email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i m√£ x√°c th·ª±c email
   */
  static async sendVerificationCode(email: string, code: string, name: string = 'Kh√°ch h√†ng') {
    // üö® DEVELOPMENT MODE: Hi·ªÉn th·ªã m√£ tr√™n console n·∫øu SMTP ch∆∞a c·∫•u h√¨nh
    if (!process.env.SMTP_USER || process.env.SMTP_USER === 'your-email@gmail.com') {
      console.log('\n' + '='.repeat(60));
      console.log('üìß EMAIL VERIFICATION CODE (Development Mode)');
      console.log('='.repeat(60));
      console.log(`Recipient: ${email}`);
      console.log(`Name: ${name}`);
      console.log(`Verification Code: ${code}`);
      console.log('='.repeat(60) + '\n');
      return { success: true, messageId: 'dev-mode' };
    }

    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'M√£ x√°c th·ª±c ƒëƒÉng k√Ω - KatHome In Town',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .code { font-size: 32px; font-weight: bold; color: #C599B6; 
                      text-align: center; letter-spacing: 5px; padding: 20px; 
                      background: white; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .warning { color: #e74c3c; font-size: 14px; margin-top: 15px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üè† KatHome In Town</h1>
                <p>X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n</p>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i KatHome In Town!</p>
                <p>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</p>
                <div class="code">${code}</div>
                <p>M√£ n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong>.</p>
                <p class="warning">‚ö†Ô∏è Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai!</p>
                <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email n√†y.</p>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      const info = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Email sent:', info.messageId);
      return { success: true, messageId: info.messageId };
    } catch (error) {
      console.error('‚ùå Error sending email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i email ch√†o m·ª´ng sau khi x√°c th·ª±c
   */
  static async sendWelcomeEmail(email: string, name: string) {
    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi KatHome In Town! üéâ',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .btn { display: inline-block; padding: 12px 30px; background: #C599B6; 
                     color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üéâ Ch√†o m·ª´ng b·∫°n!</h1>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng!</p>
                <p>B·∫°n ƒë√£ s·∫µn s√†ng ƒë·ªÉ:</p>
                <ul>
                  <li>üè† Kh√°m ph√° c√°c ph√≤ng homestay ƒë·∫πp nh·∫•t H√† N·ªôi</li>
                  <li>üìÖ ƒê·∫∑t ph√≤ng nhanh ch√≥ng v√† ti·ªán l·ª£i</li>
                  <li>üí∞ Nh·∫≠n ∆∞u ƒë√£i v√† gi·∫£m gi√° ƒë·∫∑c bi·ªát</li>
                  <li>‚≠ê Tr·∫£i nghi·ªám d·ªãch v·ª• 5 sao</li>
                </ul>
                <div style="text-align: center;">
                  <a href="${process.env.CLIENT_URL || 'http://localhost:3001'}" class="btn">
                    B·∫Øt ƒë·∫ßu ƒë·∫∑t ph√≤ng
                  </a>
                </div>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      await this.transporter.sendMail(mailOptions);
      return { success: true };
    } catch (error) {
      console.error('‚ùå Error sending welcome email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i email reset password
   */
  static async sendResetPasswordEmail(email: string, resetToken: string, name: string) {
    const resetUrl = `${process.env.CLIENT_URL || 'http://localhost:3001'}/reset-password?token=${resetToken}`;
    
    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - KatHome In Town',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .btn { display: inline-block; padding: 12px 30px; background: #C599B6; 
                     color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
              .warning { color: #e74c3c; font-size: 14px; margin-top: 15px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n KatHome In Town.</p>
                <p>Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                <div style="text-align: center;">
                  <a href="${resetUrl}" class="btn">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                </div>
                <p class="warning">‚ö†Ô∏è Link n√†y c√≥ hi·ªáu l·ª±c trong 1 gi·ªù.</p>
                <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      await this.transporter.sendMail(mailOptions);
      return { success: true };
    } catch (error) {
      console.error('‚ùå Error sending reset password email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i email x√°c nh·∫≠n thanh to√°n v√† ƒë·∫∑t ph√≤ng
   */
  static async sendPaymentConfirmationEmail(
    email: string,
    customerName: string,
    bookingData: {
      bookingId: string;
      roomName: string;
      checkIn: string;
      checkOut: string;
      guests: number;
      totalAmount: number;
      paymentMethod: string;
      bookingDate: string;
    }
  ) {
    // Development mode: log ra console n·∫øu SMTP ch∆∞a c·∫•u h√¨nh
    if (!process.env.SMTP_USER || process.env.SMTP_USER === 'your-email@gmail.com') {
      console.log('\n' + '='.repeat(80));
      console.log('üí≥ PAYMENT CONFIRMATION EMAIL (Development Mode)');
      console.log('='.repeat(80));
      console.log(`Recipient: ${email}`);
      console.log(`Customer: ${customerName}`);
      console.log(`Booking ID: ${bookingData.bookingId}`);
      console.log(`Room: ${bookingData.roomName}`);
      console.log(`Check-in: ${bookingData.checkIn}`);
      console.log(`Check-out: ${bookingData.checkOut}`);
      console.log(`Guests: ${bookingData.guests}`);
      console.log(`Total: ${bookingData.totalAmount.toLocaleString('vi-VN')} VND`);
      console.log(`Payment Method: ${bookingData.paymentMethod}`);
      console.log(`Booking Date: ${bookingData.bookingDate}`);
      console.log('='.repeat(80) + '\n');
      return { success: true, messageId: 'dev-mode' };
    }

    try {
      const formatDate = (dateString: string) =>
        new Date(dateString).toLocaleDateString('vi-VN', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        });

      const formatCurrency = (amount: number) => amount.toLocaleString('vi-VN') + ' VND';

      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'üéâ X√°c nh·∫≠n thanh to√°n th√†nh c√¥ng - KatHome In Town',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); padding: 30px; text-align: center; color: white; border-radius: 10px 10px 0 0; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; margin: 0; }
              .success-badge { background: #27ae60; color: white; padding: 10px 20px; border-radius: 25px; display: inline-block; margin: 20px 0; font-weight: bold; }
              .booking-details { background: white; padding: 25px; border-radius: 10px; margin: 20px 0; border-left: 4px solid #C599B6; }
              .detail-row { display: flex; justify-content: space-between; margin: 10px 0; padding: 8px 0; border-bottom: 1px solid #eee; }
              .detail-label { font-weight: bold; color: #555; }
              .detail-value { color: #333; }
              .total-amount { background: #C599B6; color: white; padding: 20px; border-radius: 10px; text-align: center; margin: 20px 0; font-size: 18px; font-weight: bold; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .btn { display: inline-block; padding: 12px 30px; background: #C599B6; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
              .contact-info { background: #f8f9fa; padding: 20px; border-radius: 10px; margin: 20px 0; }
              .icon { margin-right: 8px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üè† KatHome In Town</h1>
                <p>X√°c nh·∫≠n ƒë·∫∑t ph√≤ng th√†nh c√¥ng!</p>
                <div class="success-badge">‚úÖ Thanh to√°n ho√†n t·∫•t</div>
              </div>
              
              <div class="content">
                <p>Xin ch√†o <strong>${customerName}</strong>,</p>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† ƒë·∫∑t ph√≤ng t·∫°i KatHome In Town!</p>
                <p>Ch√∫ng t√¥i x√°c nh·∫≠n r·∫±ng thanh to√°n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng.</p>
                
                <div class="booking-details">
                  <h3 style="margin-top: 0; color: #C599B6;">üìã Chi ti·∫øt ƒë·∫∑t ph√≤ng</h3>
                  <div class="detail-row">
                    <span class="detail-label">M√£ ƒë·∫∑t ph√≤ng:</span>
                    <span class="detail-value"><strong>${bookingData.bookingId}</strong></span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">T√™n ph√≤ng:</span>
                    <span class="detail-value">${bookingData.roomName}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">Ng√†y nh·∫≠n ph√≤ng:</span>
                    <span class="detail-value">${formatDate(bookingData.checkIn)}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">Ng√†y tr·∫£ ph√≤ng:</span>
                    <span class="detail-value">${formatDate(bookingData.checkOut)}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">S·ªë kh√°ch:</span>
                    <span class="detail-value">${bookingData.guests} ng∆∞·ªùi</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">Ph∆∞∆°ng th·ª©c thanh to√°n:</span>
                    <span class="detail-value">${bookingData.paymentMethod}</span>
                  </div>
                  <div class="detail-row">
                    <span class="detail-label">Ng√†y ƒë·∫∑t:</span>
                    <span class="detail-value">${formatDate(bookingData.bookingDate)}</span>
                  </div>
                </div>
                
                <div class="total-amount">
                  üí∞ T·ªïng thanh to√°n: ${formatCurrency(bookingData.totalAmount)}
                </div>
                
                <div class="contact-info">
                  <h4 style="margin-top: 0; color: #C599B6;">üìû Th√¥ng tin li√™n h·ªá</h4>
                  <p><span class="icon">üìû</span> Hotline: 098 894 65 68</p>
                  <p><span class="icon">‚úâÔ∏è</span> Email: kathome.luv@gmail.com</p>
                  <p><span class="icon">üìç</span> ƒê·ªãa ch·ªâ: H√† N·ªôi, Vi·ªát Nam</p>
                </div>
                
                <div style="text-align: center;">
                  <a href="${process.env.CLIENT_URL || 'http://localhost:3001'}" class="btn">
                    üè† V·ªÅ trang ch·ªß
                  </a>
                </div>
                
                <p style="margin-top: 30px; font-size: 14px; color: #666;">
                  <strong>L∆∞u √Ω:</strong> Vui l√≤ng mang theo gi·∫•y t·ªù t√πy th√¢n khi nh·∫≠n ph√≤ng. 
                  N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.
                </p>
              </div>
              
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>Ch√∫c b·∫°n c√≥ m·ªôt k·ª≥ ngh·ªâ tuy·ªát v·ªùi! üåü</p>
              </div>
            </div>
          </body>
          </html>
        `,
      } as any;

      const info = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Payment confirmation email sent:', info.messageId);
      return { success: true, messageId: info.messageId };
    } catch (error) {
      console.error('‚ùå Error sending payment confirmation email:', error);
      return { success: false, error };
    }
  }
}
