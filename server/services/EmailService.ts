import nodemailer from 'nodemailer';

export class EmailService {
  private static transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: 'lunarofmoon@gmail.com',
      pass: 'idektxbqqwdavxou',
    },
  });
  

  /**
   * G·ª≠i m√£ x√°c th·ª±c email
   */
  static async sendVerificationCode(email: string, code: string, name: string = 'Kh√°ch h√†ng') {
    // üö® DEVELOPMENT MODE: Hi·ªÉn th·ªã m√£ tr√™n console n·∫øu SMTP ch∆∞a c·∫•u h√¨nh
    if (!process.env.SMTP_USER || process.env.SMTP_USER === 'your-email@gmail.com') {
      console.log('\n' + '='.repeat(60));
      console.log('üìß EMAIL VERIFICATION CODE (Development Mode)');
      console.log('='.repeat(60));
      console.log(`Recipient: ${email}`);
      console.log(`Name: ${name}`);
      console.log(`Verification Code: ${code}`);
      console.log('='.repeat(60) + '\n');
      return { success: true, messageId: 'dev-mode' };
    }

    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'M√£ x√°c th·ª±c ƒëƒÉng k√Ω - KatHome In Town',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .code { font-size: 32px; font-weight: bold; color: #C599B6; 
                      text-align: center; letter-spacing: 5px; padding: 20px; 
                      background: white; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .warning { color: #e74c3c; font-size: 14px; margin-top: 15px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üè† KatHome In Town</h1>
                <p>X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n</p>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i KatHome In Town!</p>
                <p>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</p>
                <div class="code">${code}</div>
                <p>M√£ n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong>.</p>
                <p class="warning">‚ö†Ô∏è Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai!</p>
                <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email n√†y.</p>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      const info = await this.transporter.sendMail(mailOptions);
      console.log('‚úÖ Email sent:', info.messageId);
      return { success: true, messageId: info.messageId };
    } catch (error) {
      console.error('‚ùå Error sending email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i email ch√†o m·ª´ng sau khi x√°c th·ª±c
   */
  static async sendWelcomeEmail(email: string, name: string) {
    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi KatHome In Town! üéâ',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .btn { display: inline-block; padding: 12px 30px; background: #C599B6; 
                     color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üéâ Ch√†o m·ª´ng b·∫°n!</h1>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng!</p>
                <p>B·∫°n ƒë√£ s·∫µn s√†ng ƒë·ªÉ:</p>
                <ul>
                  <li>üè† Kh√°m ph√° c√°c ph√≤ng homestay ƒë·∫πp nh·∫•t H√† N·ªôi</li>
                  <li>üìÖ ƒê·∫∑t ph√≤ng nhanh ch√≥ng v√† ti·ªán l·ª£i</li>
                  <li>üí∞ Nh·∫≠n ∆∞u ƒë√£i v√† gi·∫£m gi√° ƒë·∫∑c bi·ªát</li>
                  <li>‚≠ê Tr·∫£i nghi·ªám d·ªãch v·ª• 5 sao</li>
                </ul>
                <div style="text-align: center;">
                  <a href="${process.env.CLIENT_URL || 'http://localhost:3001'}" class="btn">
                    B·∫Øt ƒë·∫ßu ƒë·∫∑t ph√≤ng
                  </a>
                </div>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      await this.transporter.sendMail(mailOptions);
      return { success: true };
    } catch (error) {
      console.error('‚ùå Error sending welcome email:', error);
      return { success: false, error };
    }
  }

  /**
   * G·ª≠i email reset password
   */
  static async sendResetPasswordEmail(email: string, resetToken: string, name: string) {
    const resetUrl = `${process.env.CLIENT_URL || 'http://localhost:3001'}/reset-password?token=${resetToken}`;
    
    try {
      const mailOptions = {
        from: `"KatHome In Town" <${process.env.SMTP_USER}>`,
        to: email,
        subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - KatHome In Town',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: linear-gradient(135deg, #C599B6 0%, #F2A7C3 100%); 
                        padding: 30px; text-align: center; color: white; }
              .content { background: #f9f9f9; padding: 30px; border-radius: 5px; margin: 20px 0; }
              .footer { text-align: center; color: #666; font-size: 12px; padding: 20px; }
              .btn { display: inline-block; padding: 12px 30px; background: #C599B6; 
                     color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
              .warning { color: #e74c3c; font-size: 14px; margin-top: 15px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
              </div>
              <div class="content">
                <p>Xin ch√†o <strong>${name}</strong>,</p>
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n KatHome In Town.</p>
                <p>Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                <div style="text-align: center;">
                  <a href="${resetUrl}" class="btn">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                </div>
                <p class="warning">‚ö†Ô∏è Link n√†y c√≥ hi·ªáu l·ª±c trong 1 gi·ªù.</p>
                <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
              </div>
              <div class="footer">
                <p>¬© 2025 KatHome In Town - H·ªá th·ªëng homestay H√† N·ªôi</p>
                <p>üìû 098 894 65 68 | ‚úâÔ∏è kathome.luv@gmail.com</p>
              </div>
            </div>
          </body>
          </html>
        `,
      };

      await this.transporter.sendMail(mailOptions);
      return { success: true };
    } catch (error) {
      console.error('‚ùå Error sending reset password email:', error);
      return { success: false, error };
    }
  }
}
